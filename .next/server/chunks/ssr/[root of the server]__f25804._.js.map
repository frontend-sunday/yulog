{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurim/Documents/dev-rim/side-projects/dev-rim/src/lib/post.ts"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport dayjs from \"dayjs\";\nimport matter from \"gray-matter\";\nimport readingTime from \"reading-time\";\nimport { sync } from \"glob\";\nimport { Post, PostMatter } from \"@/config/types\";\n\nconst BASE_PATH = \"/src/posts\";\nconst POSTS_PATH = path.join(process.cwd(), BASE_PATH);\n\n// MDX 파일 파싱 : abstract / detail 구분\nconst parsePost = async (postPath: string): Promise<Post> => {\n  const postAbstract = parsePostAbstract(postPath);\n  const postDetail = await parsePostDetail(postPath);\n\n  return { ...postAbstract, ...postDetail };\n};\n\n// MDX Abstract\nexport const parsePostAbstract = (postPath: string) => {\n  // testCategory/title/content\n  const filtPath = postPath\n    .slice(postPath.indexOf(BASE_PATH))\n    .replace(`${BASE_PATH}/`, \"\")\n    .replace(\".mdx\", \"\");\n\n  const [category, slug] = filtPath.split(\"/\");\n\n  const url = `/blog/${category}/${slug}`;\n\n  return { url, category, slug };\n};\n\n// MDX Detail\nconst parsePostDetail = async (postPath: string) => {\n  const file = fs.readFileSync(postPath, \"utf8\");\n  const { data, content } = matter(file);\n  const grayMatter = data as PostMatter;\n  const readingMinutes = Math.ceil(readingTime(content).minutes);\n  const dateString = dayjs(grayMatter.date)\n    .locale(\"ko\")\n    .format(\"YYYY년 MM월 DD일\");\n\n  return { ...grayMatter, dateString, content, readingMinutes };\n};\n\n// 모든 MDX 파일 조회\nexport const getPostPath = (category?: string) => {\n  const folder = category || \"**\";\n  const paths: string[] = sync(`${POSTS_PATH}/${folder}/**/*.mdx`);\n\n  return paths;\n};\n\n// 모든 포스트 목록 조회\nexport const getPostList = async (category?: string): Promise<Post[]> => {\n  const paths: string[] = getPostPath(category);\n  const posts = await Promise.all(paths.map((postPath) => parsePost(postPath)));\n\n  return posts;\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AAGA,MAAM,YAAY;AAClB,MAAM,aAAa,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAE5C,mCAAmC;AACnC,MAAM,YAAY,OAAO;IACvB,MAAM,eAAe,kBAAkB;IACvC,MAAM,aAAa,MAAM,gBAAgB;IAEzC,OAAO;QAAE,GAAG,YAAY;QAAE,GAAG,UAAU;IAAC;AAC1C;AAGO,MAAM,oBAAoB,CAAC;IAChC,6BAA6B;IAC7B,MAAM,WAAW,SACd,KAAK,CAAC,SAAS,OAAO,CAAC,YACvB,OAAO,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,IACzB,OAAO,CAAC,QAAQ;IAEnB,MAAM,CAAC,UAAU,KAAK,GAAG,SAAS,KAAK,CAAC;IAExC,MAAM,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM;IAEvC,OAAO;QAAE;QAAK;QAAU;IAAK;AAC/B;AAEA,aAAa;AACb,MAAM,kBAAkB,OAAO;IAC7B,MAAM,OAAO,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IACvC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;IACjC,MAAM,aAAa;IACnB,MAAM,iBAAiB,KAAK,IAAI,CAAC,CAAA,GAAA,wIAAA,CAAA,UAAW,AAAD,EAAE,SAAS,OAAO;IAC7D,MAAM,aAAa,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE,WAAW,IAAI,EACrC,MAAM,CAAC,MACP,MAAM,CAAC;IAEV,OAAO;QAAE,GAAG,UAAU;QAAE;QAAY;QAAS;IAAe;AAC9D;AAGO,MAAM,cAAc,CAAC;IAC1B,MAAM,SAAS,YAAY;IAC3B,MAAM,QAAkB,CAAA,GAAA,4JAAA,CAAA,OAAI,AAAD,EAAE,GAAG,WAAW,CAAC,EAAE,OAAO,SAAS,CAAC;IAE/D,OAAO;AACT;AAGO,MAAM,cAAc,OAAO;IAChC,MAAM,QAAkB,YAAY;IACpC,MAAM,QAAQ,MAAM,QAAQ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,WAAa,UAAU;IAElE,OAAO;AACT"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurim/Documents/dev-rim/side-projects/dev-rim/src/components/post_list/PostListPage.tsx"],"sourcesContent":["import { getPostList } from \"@/lib/post\";\n\nconst PostListPage = async ({ category }: { category?: string }) => {\n  const postList = await getPostList(category);\n  // const categoryList = await getCategory\n\n  console.log(postList);\n\n  return (\n    <section>\n      <ul>\n        <li>dd</li>\n        {/* {postList.map((post) => (\n                    {post.path}\n                ))} */}\n      </ul>\n    </section>\n  );\n};\n\nexport default PostListPage;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,eAAe,OAAO,EAAE,QAAQ,EAAyB;IAC7D,MAAM,WAAW,MAAM,CAAA,GAAA,kHAAA,CAAA,cAAW,AAAD,EAAE;IACnC,yCAAyC;IAEzC,QAAQ,GAAG,CAAC;IAEZ,qBACE,8OAAC;kBACC,cAAA,8OAAC;sBACC,cAAA,8OAAC;0BAAG;;;;;;;;;;;;;;;;AAOZ;uCAEe"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurim/Documents/dev-rim/side-projects/dev-rim/src/app/blog/%28main%29/page.tsx"],"sourcesContent":["import PostListPage from \"@/components/post_list/PostListPage\";\n\nconst Blog = async () => {\n  return <PostListPage />;\n};\n\nexport default Blog;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,OAAO;IACX,qBAAO,8OAAC,+IAAA,CAAA,UAAY;;;;;AACtB;uCAEe"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}